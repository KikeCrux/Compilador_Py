program {}

program {
    int x, y;
    write x;
    write y;
}

program {
    int x, y;
    x=0; // comentario 1
    y=4; /* comentario 2 */
    while (y>=0) {
        if(x<y) then{
        y=y-1;
        } fi
    }
}

main {
    int x, y;
    float a, b;
    bool c;
    c = false;
    x=5; // comentario 1
    y=4; /* comentario 2 */
    a=0.0;
    b=3.0;
    do {
        if(x<y and y>=0) then{
            c=true;
            } else {
            x=x-2;
            a=a*x+b;
            y=y-1;
        }
        fi
        while(a==3 or x==y){
            write a;
            a=a+1;
            x=a-y;
        }
    } until(c == true);
}

M치s ejemplos

program {
    int a, b, c;
    float d, e, f;
    bool g;
    g = true;
    a = 10;
    b = 20;
    d = 5.5;
    e = 3.3;
    do {
        if(a > b and b <= 30) then {
            g = false;
        } else {
            a = a - 1;
            f = d * e;
            b = b + 2;
        }
        fi
        while(d != 10 or f < 20){
            write f;
            f = f + 2.5;
            e = e - 1.1;
        }
    } until(g == false);
}

program {
    int m, n;
    float x, y;
    bool z;
    z = true;
    m = 15;
    n = 25;
    x = 2.5;
    y = 1.5;
    do {
        if(m == n and x <= y) then {
            z = false;
        } else {
            m = m + 3;
            x = y * x + n;
            n = n - 2;
        }
        fi
        while(x >= 5 or m == n){
            write m;
            x = x / 1.1;
            n = n + 1;
        }
    } until(z == false);
}


program {
    int i, j, k;
    float p, q;
    bool flag;
    flag = false;
    i = 8;
    j = 12;
    p = 4.4;
    q = 2.2;
    do {
        if(i != j and j > 5) then {
            flag = true;
        } else {
            i = i + 2;
            p = p - q;
            j = j - 1;
        }
        fi
        while(p <= 10 or i != j){
            write i;
            p = p * 1.5;
            q = q + 0.5;
        }
    } until(flag == true);
}

program {
    int x, y, z;
    float alpha, beta;
    bool condition;
    condition = true;
    x = 7;
    y = 3;
    alpha = 1.1;
    beta = 0.9;
    do {
        if(x >= y and y < 10) then {
            condition = false;
        } else {
            x = x * 2;
            alpha = alpha + beta;
            y = y - 1;
        }
        fi
        while(alpha < 5 or x > y){
            write alpha;
            beta = beta * 1.2;
            y = y + 2;
        }
    } until(condition == false);
}

main {
    int x, y, z;
    float a, b, c;
    	
    x = 32;
    y = 2 + 3 - 1;
    z = y + 7;
    y = y + 1;

    a = 24.0+4-1/3*2+34-1;
    b = (5.0 - 3.0) * (8.0 / 2.0);
    c = 8.0 / 2.0 + 15.0 * 4.0;

    if (2 > 3) then {
        y = y + 3;  
    } else {
        if (4 > 2) then {
            a = 3.2;  
        } else {
            a = 5.0; 
        }
        fi
        y = y + 1;  
    }
    fi

    x = 3 + 4;

    do {
        y = (y + 1) * 2 + 1;
        while (x > 7) {
            x = 6 + 8 / 9 * 8 / 3;
            write x;
        }
    } until (y == 5);

    while (y == 0) {
        write y;
        write x;
    }
}

main {
    int x, y, z;
    float a, b, c;
    	
    x = 32;
    y = 2 + 3 - 1; // y = 4
    z = y + 7;     // z = 11
    y = y + 1;     // y = 5

    a = 24.0 + 4 - 1 / 3 * 2 + 34 - 1; // Mantener constantes para ver int/int = int
    b = (5.0 - 3.0) * (8.0 / 2.0);
    c = 8.0 / 2.0 + 15.0 * 4.0;

    if (2 > 3) then {
        y = y + 3;  
    } else {
        if (4 > 2) then {
            a = 3.2;  
        } else {
            a = 5.0; 
        }
        fi
        y = y + 1;  // y = 5 + 1 = 6
    }
    fi

    x = 3 + 4; // x = 7

    // Corregimos el bucle 'do-until'
    do {
        y = y - 1; // Restamos 1 a y en cada iteraci칩n
        while (x > 7) {
            x = 6 + 8 / 9 * 8 / 3; // Mantener constantes
            write x;
            x = x - 1; // Decrementamos x para eventualmente salir del bucle
        }
    } until (y == 5); // Como y inicia en 6, alcanzar치 5 y el bucle terminar치

    // Ajustamos el bucle 'while' final
    while (y == 5) {
        write y;
        write x;
        y = y - 1; // Actualizamos y para salir del bucle
    }
}

main {
    int x, y, z;
    float a, b, c;
    	
    x = 32;
    y = 2 + 3 - 1; // y = 4
    z = y + 7;     // z = 11
    y = y + 1;     // y = 5

    a = 24.0 + 4 - 1 / 3 * 2 + 34 - 1; // a = 61.0 (1/3*2=0 en enteros)
    b = (5.0 - 3.0) * (8.0 / 2.0);     // b = 8.0
    c = 8.0 / 2.0 + 15.0 * 4.0;        // c = 64.0

    if (2 > 3) then {
        y = y + 3;  
    } else {
        if (4 > 2) then {
            a = 3.2;  
        } else {
            a = 5.0; 
        }
        fi
        y = y + 1;  // y = 6
    }
    fi

    x = 3 + 4; // x = 7

    do {
        y = y - 1; // y = 6 - 1 = 5
        while (x > 7) {
            x = 6 + 8 / 9 * 8 / 3; // x no cambia porque x <= 7
            write x;
            x = x - 1; // No se ejecuta
        }
    } until (y == 5); // y es 5, el bucle termina

    while (y == 5) {
        write y; // Imprime 5
        write x; // Imprime 7
        y = y - 1; // y = 4
    }
}
